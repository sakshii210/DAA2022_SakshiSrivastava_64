Q1. #include <bits/stdc++.h>
using namespace std;
int c = 0;
void mergeArray(int arr[], int l, int mid, int h) {
    int n1 = mid - l + 1;
    int n2 = h - mid;
    int a[n1], b[n2];
    for(int i = 0; i < n1; i++) {
        a[i] = arr[l + i];
    }
    for(int i = 0; i < n2; i++) {
        b[i] = arr[mid + 1 + i];
    }
    int i = 0, j = 0, k = l;
    while(i < n1 && j < n2) {
        c++;
        if(a[i] <= b[j]) {
            arr[k] = a[i];
            i++;
        }
        else {
            arr[k] = b[j];
            j++;
        }
        k++;
    }
    while(i < n1) {
        arr[k] = a[i];
        i++; k++;
    }
    while(j < n2) {
        arr[k] = b[j];
        j++; k++;
    }
}
void mergeSort(int arr[], int l, int h) {
    if(l < h) {
        int mid = l + (h - l) / 2;
        mergeSort(arr, l, mid);
        mergeSort(arr, mid + 1, h);
        mergeArray(arr, l, mid, h);
    }
}
void display(int arr[], int n) {
    for(int i = 0; i < n; i++) {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}

int main() {
    int t;
    cin>>t;
    while(t--) {
        int n;
        cin>>n;
        int *arr = new int[n];
        for(int i = 0; i < n; i++) {
            cin>>arr[i];
        }
        mergeSort(arr, 0, n - 1);
        display(arr, n);
        cout<<"comparisons = "<<c<<endl;
        delete []arr;
    }
}

Q2. #include <bits/stdc++.h>
using namespace std;
int c = 0, s = 0;
int partition(int arr[], int l, int h) {
    int x = (rand() % (l - h)) + l;
    if(h != x) {
        s++;
        swap(arr[x], arr[h]);
    }
    int pivot = arr[h];
    int i = l - 1;
    for(int j = l; j <= h - 1; j++) {
        if(arr[j] <= pivot) {
            i++;
            s++;
            swap(arr[i], arr[j]);
        }
    }
    s++;
    swap(arr[i + 1], arr[h]);
    return i + 1;
}

void quickSort(int arr[], int l, int h) {
    if(l < h) {
        int pivot = partition(arr, l, h);
        quickSort(arr, l, pivot - 1);
        quickSort(arr, pivot + 1, h);
    }
}

void display(int arr[], int n) {
    for(int i = 0; i < n; i++) {
        cout<<arr[i]<<" ";
    }
    cout<<endl;
}

int main() {
    int t;
    cin>>t;
    while(t--) {
        int n;
        cin>>n;
        int *arr = new int[n];
        for(int i = 0; i < n; i++) {
            cin>>arr[i];
        }
        quickSort(arr, 0, n - 1);
        display(arr, n);
        cout<<"swaps = "<<s<<endl;
    }
}


Q3. #include<bits/stdc++.h>
using namespace std;
int main() {
    int t;
    cin>>t;
    while(t--) {
        int n;
        cin>>n;
        int *arr = new int[n];
        for(int i = 0; i < n; i++) {
            cin>>arr[i];
        }
        int k;
        cin>>k;
        priority_queue<int> pq;
        for(int i = 0; i < k; i++) {
            pq.push(arr[i]);
        }
        for(int i = k; i < n; i++) {
            pq.push(arr[i]);
            if(pq.size() > k) pq.pop();
        }
        if(pq.empty()) cout<<"Not present"<<endl;
        else cout<<pq.top()<<endl;
        delete []arr;
    }
}
